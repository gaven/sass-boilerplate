/* # =================================================================
   # Global container class
   # ================================================================= */

@mixin container($max-width: 1366px) {
  max-width: $max-width;
  margin: 0 auto;
}

/* # =================================================================
   # Flex that sass
   # ================================================================= */

@mixin flex-container($justify: flex-start) {
  display: flex;
  justify-content: $justify;
}

@mixin flex-child($fraction) {
  flex: 0 1 $fraction * 100%;
}

@mixin flex-grow {
  flex: 1 1 auto;
}

/* # =================================================================
   # Scale a value, yo
   # ================================================================= */

@mixin mq-values(
  $property,
  $max-value,
  $min-value,
  $max-width: 1440px,
  $min-width: 500px,
  $steps: 6
) {
  #{$property}: $max-value;

  @for $i from 0 through $steps {
    $break: $max-width - floor(($max-width - $min-width) * $i / ($steps - 1));

    @if $i == 0 {
      $break: $break - 1px;
    }

    @media (max-width: $break) {
      #{$property}: $max-value - (($max-value - $min-value) * ($i + 1) / $steps);
    }
  }
}

/* # =================================================================
   # Get actual mobile size - scale taken into account
   # ================================================================= */

@mixin scaled-size($property, $value, $percentage: 80%) {
  $base-font-size: 16px;

  $remaining-percentage: 100 - strip-unit($percentage);

  $size: strip-unit($value);

  $scaled-size: ((($remaining-percentage / 100) * $size) + $size) /
    strip-unit($base-font-size);

  #{$property}: #{$scaled-size}rem;
}

/* # =================================================================
   # Lerp between two sizes for better responsive sizing
   # ================================================================= */

@mixin fluid(
  $property,
  $max-size,
  $min-size: null,
  $max-scale-width: 1680,
  $min-scale-width: 375) {

  $auto-min-size-factor: 0.5;

  $min-scale-width-px: $min-scale-width * 1px;
  $max-scale-width-px: $max-scale-width * 1px;

  $min-size-px: $min-size * 1px;
  $max-size-px: $max-size * 1px;

  $size: $max-size - $min-size;
  $width: $max-scale-width - $min-scale-width;

  @if $min-size != null {
    #{$property}: calc(#{$min-size-px} + #{$size} / #{$width} * (100vw - #{$min-scale-width-px}));
  } @else {
    #{$property}: calc(#{$max-size-px} * #{$auto-min-size-factor} + (#{$max-size} - #{$max-size} * #{$auto-min-size-factor})/(#{$max-scale-width} - #{$min-scale-width}) * (100vw - #{$min-scale-width}));
  }

  @media(max-width: $min-scale-width-px) {
    @if $min-size != null {
      #{$property}: $min-size-px;
    } @else {
      #{$property}: calc(#{$max-size-px} * #{$auto-min-size-factor});
    }
  }

  @media(min-width: $max-scale-width-px) {
    #{$property}: $max-size-px;
  }
}

